import{i as n}from"./tiny-invariant.CopsF_GD.js";class y{x;y;z;xPrev;yPrev;color;pulse;constructor(t=0,e=0,i=0,l="#00D4FF"){this.x=t,this.y=e,this.z=i,this.xPrev=t,this.yPrev=e,this.color=l,this.pulse=Math.random()*Math.PI*2}update(t,e,i){this.xPrev=this.x,this.yPrev=this.y,this.z+=i*.0675,this.x+=this.x*(i*.0225)*this.z,this.y+=this.y*(i*.0225)*this.z,this.pulse+=.02,(this.x>t/2||this.x<-t/2||this.y>e/2||this.y<-e/2)&&(this.x=Math.random()*t-t/2,this.y=Math.random()*e-e/2,this.xPrev=this.x,this.yPrev=this.y,this.z=0)}draw(t,e){const i=Math.min(this.z*.5,1),l=(Math.sin(this.pulse)+1)/2;t.lineWidth=this.z*.5,t.strokeStyle=`${this.color}${Math.floor(i*255).toString(16).padStart(2,"0")}`,t.beginPath(),t.moveTo(this.x,this.y),t.lineTo(this.xPrev,this.yPrev),t.stroke(),(e==="neural"||e==="quantum")&&(t.shadowBlur=10*this.z,t.shadowColor=this.color,t.fillStyle=`${this.color}${Math.floor(l*255).toString(16).padStart(2,"0")}`,t.beginPath(),t.arc(this.x,this.y,this.z*2,0,Math.PI*2),t.fill(),t.shadowBlur=0)}}const c={matrix:["#00FF88","#00CC66","#00FF44","#88FF88"],neural:["#663399","#00D4FF","#FF00FF","#00FFFF"],quantum:["#8B5CF6","#00F5FF","#FF0080","#39FF14"]},r=document.querySelector("#starfield-canvas");n(r);const o=r.getContext("2d"),h=document.querySelector("#cyber-starfield");n(h);const f=parseInt(r.dataset.density||"800"),p=parseFloat(r.dataset.speed||"0.1"),m=r.dataset.theme||"neural",d=c[m]||c.neural,u=Array.from({length:f},()=>{const s=d[Math.floor(Math.random()*d.length)];return new y(0,0,0,s)});let a=0;const v=new ResizeObserver(M);v.observe(h);function M(){n(o),a>0&&cancelAnimationFrame(a);const{clientWidth:s,clientHeight:t}=h,e=window.devicePixelRatio||1;r.width=s*e,r.height=t*e,r.style.width=`${s}px`,r.style.height=`${t}px`,o.scale(e,e);for(const i of u)i.x=Math.random()*s-s/2,i.y=Math.random()*t-t/2,i.z=Math.random()*1;o.translate(s/2,t/2),o.globalCompositeOperation="screen",a=requestAnimationFrame(F)}function F(){n(o);const{clientWidth:s,clientHeight:t}=h;o.fillStyle="rgba(0, 0, 0, 0.1)",o.fillRect(-s/2,-t/2,s,t);for(const e of u)e.update(s,t,p),e.draw(o,m);a=requestAnimationFrame(F)}const P=window.matchMedia("(prefers-reduced-motion: reduce)");P.matches&&cancelAnimationFrame(a);
