---
export interface Props {
  variant?: 'wave' | 'zigzag' | 'data' | 'simple';
  color?: string;
  height?: string;
  animated?: boolean;
  className?: string;
}

const { 
  variant = 'wave',
  color = '#00ffff',
  height = '4px',
  animated = true,
  className = ''
} = Astro.props;
---

<div class={`pixel-divider pixel-${variant} ${animated ? 'animated' : ''} ${className}`} style={`--divider-color: ${color}; --divider-height: ${height}`}>
  <div class="divider-content">
    {variant === 'wave' && (
      <div class="wave-pattern">
        <div class="wave-segment"></div>
        <div class="wave-segment"></div>
        <div class="wave-segment"></div>
        <div class="wave-segment"></div>
        <div class="wave-segment"></div>
        <div class="wave-segment"></div>
        <div class="wave-segment"></div>
        <div class="wave-segment"></div>
      </div>
    )}
    
    {variant === 'zigzag' && (
      <div class="zigzag-pattern">
        <div class="zig"></div>
        <div class="zag"></div>
        <div class="zig"></div>
        <div class="zag"></div>
        <div class="zig"></div>
        <div class="zag"></div>
        <div class="zig"></div>
        <div class="zag"></div>
      </div>
    )}
    
    {variant === 'data' && (
      <div class="data-pattern">
        <div class="data-block active"></div>
        <div class="data-block"></div>
        <div class="data-block active"></div>
        <div class="data-block active"></div>
        <div class="data-block"></div>
        <div class="data-block active"></div>
        <div class="data-block"></div>
        <div class="data-block active"></div>
        <div class="data-block active"></div>
        <div class="data-block"></div>
        <div class="data-block active"></div>
        <div class="data-block"></div>
      </div>
    )}
    
    {variant === 'simple' && (
      <div class="simple-line"></div>
    )}
  </div>
</div>

<style>
  .pixel-divider {
    width: 100%;
    height: var(--divider-height, 4px);
    margin: 2rem 0;
    position: relative;
    overflow: hidden;
    image-rendering: pixelated;
    image-rendering: -moz-crisp-edges;
    image-rendering: crisp-edges;
  }
  
  .divider-content {
    position: relative;
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
  }
  
  /* Wave Pattern */
  .wave-pattern {
    display: flex;
    width: 100%;
    height: 100%;
    align-items: center;
  }
  
  .wave-segment {
    flex: 1;
    height: 100%;
    background: var(--divider-color, #00ffff);
    margin: 0 1px;
    border-radius: 0;
  }
  
  .wave-segment:nth-child(1) { height: 20%; }
  .wave-segment:nth-child(2) { height: 60%; }
  .wave-segment:nth-child(3) { height: 100%; }
  .wave-segment:nth-child(4) { height: 80%; }
  .wave-segment:nth-child(5) { height: 40%; }
  .wave-segment:nth-child(6) { height: 80%; }
  .wave-segment:nth-child(7) { height: 100%; }
  .wave-segment:nth-child(8) { height: 60%; }
  
  .pixel-wave.animated .wave-segment {
    animation: wave-flow 3s ease-in-out infinite;
  }
  
  .pixel-wave.animated .wave-segment:nth-child(2) { animation-delay: 0.2s; }
  .pixel-wave.animated .wave-segment:nth-child(3) { animation-delay: 0.4s; }
  .pixel-wave.animated .wave-segment:nth-child(4) { animation-delay: 0.6s; }
  .pixel-wave.animated .wave-segment:nth-child(5) { animation-delay: 0.8s; }
  .pixel-wave.animated .wave-segment:nth-child(6) { animation-delay: 1s; }
  .pixel-wave.animated .wave-segment:nth-child(7) { animation-delay: 1.2s; }
  .pixel-wave.animated .wave-segment:nth-child(8) { animation-delay: 1.4s; }
  
  @keyframes wave-flow {
    0%, 100% { 
      opacity: 0.6; 
      transform: scaleY(1);
    }
    50% { 
      opacity: 1; 
      transform: scaleY(1.5);
    }
  }
  
  /* Zigzag Pattern */
  .zigzag-pattern {
    display: flex;
    width: 100%;
    height: 100%;
    align-items: center;
  }
  
  .zig, .zag {
    width: 8px;
    height: 100%;
    background: var(--divider-color, #00ffff);
    margin: 0 1px;
  }
  
  .zig {
    clip-path: polygon(0 0, 100% 100%, 0 100%);
  }
  
  .zag {
    clip-path: polygon(0 100%, 100% 0, 100% 100%);
  }
  
  .pixel-zigzag.animated .zig,
  .pixel-zigzag.animated .zag {
    animation: zigzag-pulse 2s ease-in-out infinite alternate;
  }
  
  @keyframes zigzag-pulse {
    0% { opacity: 0.4; }
    100% { opacity: 1; }
  }
  
  /* Data Pattern */
  .data-pattern {
    display: flex;
    width: 100%;
    height: 100%;
    align-items: center;
    justify-content: center;
    gap: 4px;
  }
  
  .data-block {
    width: 16px;
    height: 100%;
    background: rgba(0, 255, 255, 0.3);
    border: 1px solid var(--divider-color, #00ffff);
    border-radius: 0;
  }
  
  .data-block.active {
    background: var(--divider-color, #00ffff);
    box-shadow: 0 0 4px var(--divider-color, #00ffff);
  }
  
  .pixel-data.animated .data-block {
    animation: data-flow 2s linear infinite;
  }
  
  .pixel-data.animated .data-block:nth-child(1) { animation-delay: 0s; }
  .pixel-data.animated .data-block:nth-child(2) { animation-delay: 0.2s; }
  .pixel-data.animated .data-block:nth-child(3) { animation-delay: 0.4s; }
  .pixel-data.animated .data-block:nth-child(4) { animation-delay: 0.6s; }
  .pixel-data.animated .data-block:nth-child(5) { animation-delay: 0.8s; }
  .pixel-data.animated .data-block:nth-child(6) { animation-delay: 1s; }
  .pixel-data.animated .data-block:nth-child(7) { animation-delay: 1.2s; }
  .pixel-data.animated .data-block:nth-child(8) { animation-delay: 1.4s; }
  .pixel-data.animated .data-block:nth-child(9) { animation-delay: 1.6s; }
  .pixel-data.animated .data-block:nth-child(10) { animation-delay: 1.8s; }
  .pixel-data.animated .data-block:nth-child(11) { animation-delay: 2s; }
  .pixel-data.animated .data-block:nth-child(12) { animation-delay: 2.2s; }
  
  @keyframes data-flow {
    0%, 50% {
      background: rgba(0, 255, 255, 0.3);
      box-shadow: none;
    }
    25% {
      background: var(--divider-color, #00ffff);
      box-shadow: 0 0 8px var(--divider-color, #00ffff);
    }
  }
  
  /* Simple Line */
  .simple-line {
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, 
      transparent 0%, 
      var(--divider-color, #00ffff) 20%, 
      var(--divider-color, #00ffff) 80%, 
      transparent 100%
    );
    border-radius: 0;
  }
  
  .pixel-simple.animated .simple-line {
    animation: simple-glow 3s ease-in-out infinite;
  }
  
  @keyframes simple-glow {
    0%, 100% { 
      opacity: 0.6; 
      filter: brightness(1);
    }
    50% { 
      opacity: 1; 
      filter: brightness(1.5);
    }
  }
  
  /* Responsive */
  @media (max-width: 768px) {
    .data-block {
      width: 12px;
    }
    
    .wave-segment {
      margin: 0 0.5px;
    }
  }
  
  @media (max-width: 480px) {
    .pixel-divider {
      margin: 1rem 0;
    }
    
    .data-pattern {
      gap: 2px;
    }
    
    .data-block {
      width: 8px;
    }
  }
</style>