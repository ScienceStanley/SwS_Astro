---
export interface Props {
  variant?: 'hero' | 'section' | 'divider';
  height?: string;
  className?: string;
}

const { 
  variant = 'hero',
  height = 'auto',
  className = ''
} = Astro.props;
---

<div class={`ghibli-pixel-banner ghibli-${variant} ${className}`} style={`height: ${height}`}>
  <div class="pixel-forest">
    <div class="digital-trees">
      <div class="tree tree-1"></div>
      <div class="tree tree-2"></div>
      <div class="tree tree-3"></div>
    </div>
    <div class="data-streams">
      <div class="stream stream-1"></div>
      <div class="stream stream-2"></div>
      <div class="stream stream-3"></div>
    </div>
    <div class="floating-elements">
      <div class="crystal crystal-1"></div>
      <div class="crystal crystal-2"></div>
      <div class="spirit spirit-1"></div>
      <div class="spirit spirit-2"></div>
    </div>
  </div>
  
  {variant === 'hero' && (
    <div class="hero-overlay">
      <slot />
    </div>
  )}
</div>

<style>
  .ghibli-pixel-banner {
    position: relative;
    overflow: hidden;
    background: linear-gradient(135deg, 
      var(--bg-primary) 0%, 
      var(--bg-secondary) 50%, 
      var(--ghibli-green) 5%
    );
  }

  .ghibli-hero {
    min-height: 100vh;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .ghibli-section {
    height: 200px;
  }

  .ghibli-divider {
    height: 64px;
  }

  .pixel-forest {
    position: absolute;
    inset: 0;
    pointer-events: none;
  }

  /* Digital Trees */
  .digital-trees {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    height: 60%;
  }

  .tree {
    position: absolute;
    bottom: 0;
    background: linear-gradient(180deg, 
      var(--ghibli-green) 0%, 
      var(--ghibli-moss) 100%
    );
    border-radius: 2px 2px 0 0;
    animation: tree-sway 4s ease-in-out infinite;
  }

  .tree-1 {
    left: 10%;
    width: 8px;
    height: 80px;
    animation-delay: 0s;
  }

  .tree-2 {
    left: 25%;
    width: 12px;
    height: 120px;
    animation-delay: 1s;
  }

  .tree-3 {
    right: 20%;
    width: 10px;
    height: 100px;
    animation-delay: 2s;
  }

  .tree::before {
    content: '';
    position: absolute;
    top: -8px;
    left: 50%;
    transform: translateX(-50%);
    width: 16px;
    height: 16px;
    background: var(--ghibli-green);
    border-radius: 50%;
    box-shadow: 
      -4px -4px 0 var(--ghibli-green),
      4px -4px 0 var(--ghibli-green),
      0 -8px 0 var(--ghibli-green);
  }

  @keyframes tree-sway {
    0%, 100% { transform: rotate(0deg); }
    25% { transform: rotate(1deg); }
    75% { transform: rotate(-1deg); }
  }

  /* Data Streams */
  .data-streams {
    position: absolute;
    inset: 0;
  }

  .stream {
    position: absolute;
    width: 2px;
    height: 100%;
    background: linear-gradient(180deg, 
      transparent 0%, 
      var(--accent-blue) 50%, 
      transparent 100%
    );
    animation: data-flow 3s linear infinite;
  }

  .stream-1 {
    left: 30%;
    animation-delay: 0s;
  }

  .stream-2 {
    left: 60%;
    animation-delay: 1s;
  }

  .stream-3 {
    right: 30%;
    animation-delay: 2s;
  }

  @keyframes data-flow {
    0% {
      transform: translateY(100%);
      opacity: 0;
    }
    50% {
      opacity: 1;
    }
    100% {
      transform: translateY(-100%);
      opacity: 0;
    }
  }

  /* Floating Elements */
  .floating-elements {
    position: absolute;
    inset: 0;
  }

  .crystal {
    position: absolute;
    width: 8px;
    height: 8px;
    background: var(--accent-purple);
    border-radius: 2px;
    animation: float-crystal 4s ease-in-out infinite;
    box-shadow: 0 0 8px var(--accent-purple);
  }

  .crystal-1 {
    top: 20%;
    left: 15%;
    animation-delay: 0s;
  }

  .crystal-2 {
    top: 40%;
    right: 25%;
    animation-delay: 2s;
  }

  @keyframes float-crystal {
    0%, 100% { 
      transform: translateY(0px) rotate(0deg);
      opacity: 0.7;
    }
    50% { 
      transform: translateY(-20px) rotate(180deg);
      opacity: 1;
    }
  }

  .spirit {
    position: absolute;
    width: 6px;
    height: 6px;
    background: var(--ghibli-blue);
    border-radius: 50%;
    animation: spirit-dance 5s ease-in-out infinite;
    box-shadow: 0 0 6px var(--ghibli-blue);
  }

  .spirit-1 {
    top: 30%;
    left: 40%;
    animation-delay: 1s;
  }

  .spirit-2 {
    top: 60%;
    right: 40%;
    animation-delay: 3s;
  }

  @keyframes spirit-dance {
    0%, 100% { 
      transform: translate(0, 0) scale(1);
      opacity: 0.8;
    }
    25% { 
      transform: translate(10px, -10px) scale(1.2);
      opacity: 1;
    }
    50% { 
      transform: translate(-5px, -20px) scale(0.8);
      opacity: 0.6;
    }
    75% { 
      transform: translate(-10px, -5px) scale(1.1);
      opacity: 1;
    }
  }

  /* Hero Overlay */
  .hero-overlay {
    position: relative;
    z-index: 10;
    text-align: center;
    padding: var(--space-xl);
  }

  /* Pixel Art Styling */
  .pixel-forest * {
    image-rendering: -moz-crisp-edges;
    image-rendering: -webkit-crisp-edges;
    image-rendering: pixelated;
    image-rendering: crisp-edges;
  }

  /* Responsive */
  @media (max-width: 768px) {
    .tree {
      width: 50%;
      height: 50%;
    }
    
    .crystal,
    .spirit {
      width: 6px;
      height: 6px;
    }
  }
</style>