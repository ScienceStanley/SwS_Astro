---
export interface Props {
  variant?: 'primary' | 'secondary' | 'ghost' | 'outline';
  size?: 'small' | 'medium' | 'large';
  href?: string;
  icon?: string;
  iconPosition?: 'left' | 'right';
  className?: string;
  onClick?: string;
}

const { 
  variant = 'primary',
  size = 'medium',
  href,
  icon,
  iconPosition = 'left',
  className = '',
  onClick
} = Astro.props;

const Component = href ? 'a' : 'button';

import { Icon } from 'astro-icon/components';
---

<Component 
  class={`btn btn-${variant} btn-${size} ${className}`}
  href={href}
  onclick={onClick}
>
  {icon && iconPosition === 'left' && (
    <Icon name={icon} class="btn-icon icon-left" />
  )}
  <span class="btn-text">
    <slot />
  </span>
  {icon && iconPosition === 'right' && (
    <Icon name={icon} class="btn-icon icon-right" />
  )}
</Component>

<style>
  .btn {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
    font-family: var(--font-body);
    font-weight: 500;
    text-decoration: none;
    border-radius: 0.5rem;
    transition: all 0.2s ease;
    cursor: pointer;
    border: none;
    position: relative;
    overflow: hidden;
  }

  /* Size Variants */
  .btn-small {
    padding: 0.5rem 1rem;
    font-size: 0.875rem;
  }

  .btn-medium {
    padding: 0.75rem 1.5rem;
    font-size: 1rem;
  }

  .btn-large {
    padding: 1rem 2rem;
    font-size: 1.125rem;
  }

  /* Primary Button */
  .btn-primary {
    background: var(--quantum-blue);
    color: white;
    box-shadow: 0 4px 14px 0 rgba(37, 99, 235, 0.3);
  }

  .btn-primary:hover {
    background: #1D4ED8;
    box-shadow: 0 6px 20px 0 rgba(37, 99, 235, 0.4);
    transform: translateY(-2px);
  }

  /* Secondary Button */
  .btn-secondary {
    background: var(--bg-tertiary);
    color: var(--text-primary);
    border: 1px solid var(--border-primary);
  }

  .btn-secondary:hover {
    background: var(--bg-quaternary);
    border-color: var(--border-accent);
  }

  /* Ghost Button */
  .btn-ghost {
    background: transparent;
    color: var(--quantum-blue);
    padding: 0.5rem 1rem;
  }

  .btn-ghost:hover {
    background: rgba(37, 99, 235, 0.1);
  }

  /* Outline Button */
  .btn-outline {
    background: transparent;
    color: var(--quantum-blue);
    border: 2px solid var(--quantum-blue);
  }

  .btn-outline:hover {
    background: var(--quantum-blue);
    color: white;
    box-shadow: 0 4px 14px 0 rgba(37, 99, 235, 0.3);
  }

  /* Icons */
  .btn-icon {
    width: 1.25rem;
    height: 1.25rem;
    flex-shrink: 0;
  }

  .btn-large .btn-icon {
    width: 1.5rem;
    height: 1.5rem;
  }

  .btn-small .btn-icon {
    width: 1rem;
    height: 1rem;
  }

  /* Active state */
  .btn:active {
    transform: scale(0.98);
  }
</style>